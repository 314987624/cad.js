@charset "UTF-8";

body {
    font: 11px 'Lucida Grande', sans-serif;
}

.cadjs-content-container {
    color: #eee;
    width: 100%;
    height: 100%;
    overflow: hidden;
}

.cadjs-view {
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
}

.cadjs-control {
    position: absolute;
    padding-left: 8px;
    height: 60px;
    top: 0;
    left: 0;
    right: 0;
    z-index: 10000;
}

.cadjs-control .btn-group {
    float: left;
    margin-right: 15px;
    margin-top: 4px;
}

.cadjs-control .btn {
    width: 27px;
    height: 25px;
    padding: 2px 3px;
    margin-right: 0;
    display: inline-block;
}

.cadjs-control .btn.active {
    text-decoration: none;
    background: #626262;
    background: -o-linear-gradient(top, #c8c8c8 0%, #626262 100%);
    background: -ms-linear-gradient(top, #c8c8c8 0%, #626262 100%);
    background: -webkit-linear-gradient(top, #c8c8c8 0%, #626262 100%);
    background: -moz-linear-gradient(top, #c8c8c8 0%, #626262 100%);
    background: linear-gradient(top, #c8c8c8 0%, #626262 100%);
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#c8c8c8', endColorstr='#626262',GradientType=0 );
    border-color: #626262;
    text-shadow: 0 0 1px #000;
    box-shadow: inset 0 0 3px rgba(0, 0, 0, 0.3);
    color: #fff;
}

.cadjs-control .cadjs-logo-container {
    position: absolute;
    top: 5px;
    right: 5px;
}

.cadjs-assembly {
    float: left;
    width: 30%;
    height: 100%;
    position: relative;
    overflow-x: hidden;
    overflow-y: scroll;
    cursor: pointer;
}

.info-panel {
    z-index: 1;
    position: absolute;
    right: 32px;
    top: 32px;
}

.non-initialized .info-panel {
    display: none;
}

.compact .info-panel {
    top: 14px;
    right: 14px;
}

.cadjs-compass {
    position: relative;
}

.compact .info-panel {
    transform:scale3d(.75, .75, .75);
    -ms-transform:scale3d(.75, .75, .75); /* IE 9 */
    -webkit-transform:scale3d(.75, .75, .75); /* Opera, Chrome, and Safari */
}

.non-initialized .cadjs-compass {
    display: none;
}

.key-hints {
    padding: 16px 0 0 0;
}

.compact .key-hints {
    display: none;
}

.bright .key-hints {
    color: #999;
}

.key-label {
    display: inline-block;
    width: 16px;
    height: 16px;
    text-align: center;
    border: 1px solid white;
    border-radius: 3px;
}

.bright .key-label {
    border-color: #999;
}

.non-initialized .key-label {
    display: none;
}



body.non-initialized {
    background: black;
}
body.non-initialized::before,
body.non-initialized::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    width: 64px;
    height: 64px;
    margin: auto;
}
body.non-initialized::before {
    background: url(images/busy-icon-cw.png);
    /*animation*/
    -webkit-animation: spinclockwise 1s linear infinite;
    -moz-animation: spinclockwise 1s linear infinite;
    -ms-animation: spinclockwise 1s linear infinite;
    -o-animation: spinclockwise 1s linear infinite;
    animation: spinclockwise 1s linear infinite;
}
body.non-initialized::after {
    background: url(images/busy-icon-ccw.png);
    /*animation*/
    -webkit-animation: spinclockwise 1.25s linear infinite reverse;
    -moz-animation: spinclockwise 1.25s linear infinite reverse;
    -ms-animation: spinclockwise 1.25s linear infinite reverse;
    -o-animation: spinclockwise 1.25s linear infinite reverse;
    animation: spinclockwise 1.25s linear infinite reverse;
}

#resizer {
    display: none;
    position: absolute;
    bottom: 4px;
    right: 4px;
    cursor: pointer;
    padding: 4px;
}
#resizer:hover {
    background: #0099ff;
}
#resizer svg {
    display: block;
}

#resizer svg polygon {
    fill: white;
}

.bright #resizer svg polygon {
    fill: black;
}

@-webkit-keyframes spinclockwise {
    from {-webkit-transform: rotateZ(0deg);}
    to {-webkit-transform: rotateZ(360deg);}
}
@-moz-keyframes spinclockwise {
    from {-moz-transform: rotateZ(0deg);}
    to {-moz-transform: rotateZ(360deg);}
}
@-ms-keyframes spinclockwise {
    from {-ms-transform: rotateZ(0deg);}
    to {-ms-transform: rotateZ(360deg);}
}
@-o-keyframes spinclockwise {
    from {-o-transform: rotateZ(0deg);}
    to {-o-transform: rotateZ(360deg);}
}
@keyframes spinclockwise {
    from {transform: rotateZ(0deg);}
    to {transform: rotateZ(360deg);}
}